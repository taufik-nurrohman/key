/*!
 *
 * The MIT License (MIT)
 *
 * Copyright © 2024 Taufik Nurrohman <https://github.com/taufik-nurrohman>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the “Software”), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).Key=n()}(this,(function(){"use strict";var e=function(e){return function(e){return void 0!==e}(e)&&!function(e){return null===e}(e)},n=function(e){return"string"==typeof e};function t(e){var n=this;return n.commands={},n.key=null,n.keys={},n.queue={},n.self=e||n,n}var r=t.prototype;return r.command=function(t){var r=this;if(n(t))return t===r.toString();var u=r.keys[r.toString()];return!!e(u)&&u},r.fire=function(t){var r,u,i=this,o=i.self||i;if("function"==typeof t)r=t.call(o),u=!0;else if(n(t)&&(t=i.commands[t]))r=t.call(o),u=!0;else if(function(e){return Array.isArray(e)}(t)){var f=t[1]||[];(t=i.commands[t[0]])&&(r=t.apply(o,f),u=!0)}return u?!e(r)||r:null},r.pull=function(n){var t=this;return t.key=null,e(n)?(delete t.queue[n],t):(t.queue={},t)},r.push=function(e){var n=this;return n.queue[n.key=e]=1,n},r.toString=function(){return(e=this.queue,Object.keys(e)).join("-");var e},Object.defineProperty(t,"name",{value:"Key"}),t}));